<?php
Namespace dclaysmith\Generator\Template;

use dclaysmith\Generator\Template;
use dclaysmith\Generator\Formatter;

class BusinessObjectTemplate extends Template {

	public function filename($tableName) {
		return $this->getFormatter($tableName)			// tbl_p_user_table-product
						->toTitle() 				// Tbl_P_User_Table-Product
						->replace("Tbl_P_","boP") 	// boPUser_Table-Product
						->replace("Tbl_C_","boC")	// (apply to child tables as well)
						->strip("_") 				// doPUserTable-Product
						->replace("-","_") 			// doPUserTable_Product
						->toString();				// return string
	}

	private function toProperName($base) {
		return $this->getFormatter($base)				// tbl_p_user_table-product
						->toTitle()					// Tbl_P_User_Table-Product
						->strip("_Id") 				// (We don't need ID)
						->strip("Tbl_P_") 			// User_Table-Product
						->strip("Tbl_C_")			// (apply to child tables as well)
						->strip("_") 				// UserTable-Product
						->replace("-","_") 			// UserTable_Product
						->toString();				
	}

	private function toPluralProperName($base) {
		return $this->getFormatter($this->toProperName($base))->pluralize()->toString();
	}

	private function toEngineClassName($tableName) {
		if (false !== strpos($tableName,"tbl_p_")) {
			return $this->toProperName($tableName)."_Eng";
		} else {
			return "c".$this->toProperName($tableName)."_Eng";
		}	
	}	

	private function getTable() {
		return $this->_table;
	}

	/**
	 * generate
	 */
	public function generate(\dclaysmith\Generator\Database\Table $_table) {

		$this->_table = $_table;

		// skip tables that do not begin with tbl_c_ or tbl_p_
		if ( !preg_match('/^tbl_[pc]_/', $_table->name )) return "";

		$templateVariable 	= $this->getFormatter($_table->name)->strip(array('tbl_c_','tbl_p_'))->toString();
		$templateClass 		= $this->toProperName($_table->name);

		$aOutput[] = <<<EOF

<?php
/**
 * abstract class {$templateClass}_Base
 *
 * This class defines an OO representation of the {$this->getTable()->name} table
 *
 * NOTE: This file is autogenerated from the {$this->getTable()->name} using
 * the CG2K6.
 *
 * IMPORTANT: This file should NEVER BE CHANGED BY HAND. NEVER! Any changes
 * that need to be made should be made to the template file and replicated for
 * all tables.
 *
 * USAGE: This is an abstract class and thus it must be inherited. Create a
 * or modify business object to use this file. Business Objects are stored in
 * the "/bo" directory.
 *
 * PHP version 5
 *
 * @category   Data Object
 * @author     D CLAY SMITH
 * @copyright  2007 D Clay Smith
 */
if (!defined('MEMCACHE_ENABLED')) define('MEMCACHE_ENABLED', 'false');

abstract class {$templateClass}_Base extends CDataObject {

	// CONSTRUCTOR
	function __construct() {
	}
}
EOF;


		return implode("\n",$aOutput);
	}

}
?>